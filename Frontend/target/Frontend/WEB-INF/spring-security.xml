<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security
        https://www.springframework.org/schema/security/spring-security.xsd">
<beans:bean name="bcryptEncoder"
    class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>



	<http>
		<intercept-url pattern="/**" access="hasAuthority('USER')" />
		<form-login />
		<logout />
	</http>

	<authentication-manager>
		<authentication-provider>
			<user-service>
				<!-- Password is prefixed with {noop} to indicate to DelegatingPasswordEncoder 
					that NoOpPasswordEncoder should be used. This is not safe for production, 
					but makes reading in samples easier. Normally passwords should be hashed 
					using BCrypt -->
				<user name="devansh" password="{noop}password"
					authorities="USER, ADMIN" />
			</user-service>
		</authentication-provider>
	</authentication-manager>

<authentication-manager>
<authentication-provider>
    <password-encoder ref="bcryptEncoder"/>
    <user-service>
    <user name="devansh" password="password"
            authorities="USER,ADMIN" />
   
    </user-service>
</authentication-provider>
</authentication-manager>


</beans:beans>